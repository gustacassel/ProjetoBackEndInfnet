@page "{orderId:long}"
@using ProjetoBackEndInfnet.Models
@model ProjetoBackEndInfnet.Pages.OrderItems.CreateModel
@{
    ViewData["Title"] = "Adicionar Item";
}

<div class="container mt-4">
    <h1 class="display-5"><i class="bi bi-plus-circle"></i> Adicionar Item ao Pedido #@Model.OrderId</h1>
    <p class="text-muted">Preencha os dados do item.</p>
    <hr />

    <form method="post">
        <input type="hidden" asp-for="OrderItem.OrderId" />

        <div class="mb-3">
            <label asp-for="OrderItem.ProductId" class="form-label"></label>
            <select asp-for="OrderItem.ProductId" class="form-control" asp-items="Model.ProductsList" id="product-select">
                <option value="">-- Selecione um produto --</option>
            </select>
            <span asp-validation-for="OrderItem.ProductId" class="text-danger"></span>
        </div>

        <div class="mb-3 d-none" id="stock-info">
            <div class="alert alert-info py-2 mb-0">
                <i class="bi bi-info-circle"></i> Quantidade em estoque: <strong id="stock-quantity"></strong>
            </div>
        </div>

        <div class="mb-3">
            <label asp-for="OrderItem.UnitPrice" class="form-label"></label>
            <input asp-for="OrderItem.UnitPrice" class="form-control" type="number" step="0.01" />
            <span asp-validation-for="OrderItem.UnitPrice" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="OrderItem.Quantity" class="form-label"></label>
            <input asp-for="OrderItem.Quantity" class="form-control" type="number" step="1" />
            <span asp-validation-for="OrderItem.Quantity" class="text-danger"></span>
        </div>

        <div class="d-flex">
            <button type="submit" class="btn btn-success me-2">
                <i class="bi bi-check-circle"></i> Adicionar
            </button>
            <a asp-page="./Index" asp-route-orderId="@Model.OrderId" class="btn btn-secondary">
                <i class="bi bi-arrow-left-circle"></i> Voltar
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Carrega os dados dos produtos para o JavaScript
            const allProducts = @Html.Raw(Json.Serialize(Model.AllProducts));
            const productSelect = document.getElementById('product-select');
            const unitPriceInput = document.getElementById('OrderItem_UnitPrice');
            const stockInfo = document.getElementById('stock-info');
            const stockQuantity = document.getElementById('stock-quantity');

            productSelect.addEventListener('change', function () {
                const productId = parseInt(this.value);

                if (!productId) {
                    unitPriceInput.value = '';
                    stockInfo.classList.add('d-none');
                    return;
                }

                // Encontra o produto selecionado
                const selectedProduct = allProducts.find(p => p.id === productId);

                if (selectedProduct) {
                    // Atualiza o campo de preço e remove o readonly
                    unitPriceInput.value = selectedProduct.price.toFixed(2);

                    // Exibe a quantidade em estoque e torna a div visível
                    stockQuantity.textContent = selectedProduct.quantityInStock;
                    stockInfo.classList.remove('d-none');
                }
            });
        });
    </script>
}