@page
@model ProjetoBackEndInfnet.Pages.Products.DetailsModel

@{
    ViewData["Title"] = "Detalhes do Produto";
}

<div class="container mt-4">
    <h1 class="display-5">Detalhes do Produto</h1>
    <p class="text-muted">Visualize as informações completas deste produto.</p>
    <hr />

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <dl class="row mb-0">
                <dt class="col-sm-3">Descrição</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.Description)</dd>

                <dt class="col-sm-3">Preço Unitário</dt>
                <dd class="col-sm-9">@Model.Product.Price.ToString("C2")</dd>

                <dt class="col-sm-3">Unidade de Medida</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.MeasureUnit)</dd>

                <dt class="col-sm-3">Quantidade em Estoque</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Product.QuantityInStock)</dd>

                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">
                    @if (Model.Product.Active)
                    {
                        <span class="badge bg-success">Ativo</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Inativo</span>
                    }
                </dd>
            </dl>
        </div>
    </div>

    <div class="d-flex">
        <a asp-page="./Edit" asp-route-id="@Model.Product.Id" class="btn btn-warning me-2">
            <i class="bi bi-pencil-square"></i> Editar
        </a>
        <a asp-page="./Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left-circle"></i> Voltar à Lista
        </a>
    </div>
</div>