@page
@using ProjetoBackEndInfnet.Models
@model ProjetoBackEndInfnet.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Criar Pedido";
}

<div class="container mt-4">
    <h1 class="display-5"><i class="bi bi-basket"></i> Criar Pedido</h1>
    <p class="text-muted">Preencha as informações do pedido.</p>
    <hr />

    <form method="post">
        <div class="mb-3">
            <label asp-for="Order.UserId" class="form-label"></label>
            <select asp-for="Order.UserId" class="form-control" asp-items="Model.UsersList" id="user-select">
                <option value="">-- Selecione um usuário --</option>
            </select>
            <span asp-validation-for="Order.UserId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Order.AddressId" class="form-label"></label>
            <select asp-for="Order.AddressId" class="form-control" id="address-select">
                <option value="">-- Selecione um endereço --</option>
            </select>
            <span asp-validation-for="Order.AddressId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Order.Status" class="form-label"></label>
            <select asp-for="Order.Status" class="form-control">
                <option value="@Order.STATUS_PENDING">Pendente</option>
                <option value="@Order.STATUS_COMPLETED">Concluído</option>
                <option value="@Order.STATUS_CANCELED">Cancelado</option>
            </select>
            <span asp-validation-for="Order.Status" class="text-danger"></span>
        </div>

        <div class="d-flex">
            <button type="submit" class="btn btn-success me-2">
                <i class="bi bi-check-circle"></i> Criar Pedido
            </button>
            <a asp-page="./Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left-circle"></i> Voltar à Lista
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.getElementById('user-select').addEventListener('change', async function () {
            const userId = this.value;
            const addressSelect = document.getElementById('address-select');

            // Limpa o dropdown de endereços
            addressSelect.innerHTML = '<option value="">-- Selecione um endereço --</option>';

            if (userId) {
                try {
                    // Faz a chamada assíncrona para a nova URL
                    const response = await fetch(`/Orders/Create?handler=Addresses&userId=${userId}`);

                    if (!response.ok) {
                        throw new Error(`Erro de rede: ${response.status} - ${response.statusText}`);
                    }

                    const addresses = await response.json();

                    // Preenche o dropdown de endereços com os dados recebidos
                    addresses.forEach(address => {
                        const option = document.createElement('option');
                        option.value = address.id;
                        option.textContent = address.text;
                        addressSelect.appendChild(option);
                    });

                } catch (error) {
                    console.error('Erro ao buscar endereços:', error);
                    alert('Houve um erro ao carregar os endereços. Tente novamente.');
                }
            }
        });
    </script>
}